/*
 * Merchant Identifier API
 * Retrieve merchant data for a given merchant descriptor
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.api.merchantidentifier.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.api.merchantidentifier.model.Country;
import com.mastercard.api.merchantidentifier.model.CountrySubDivision;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Available information for this Address such as the street, city, country, country subdivision an postal code.
 */
@ApiModel(description = "Available information for this Address such as the street, city, country, country subdivision an postal code.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-15T12:12:45.478-05:00[America/Chicago]")
public class Address {
  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private Country country;

  public static final String SERIALIZED_NAME_COUNTRY_SUBDIVISION = "countrySubdivision";
  @SerializedName(SERIALIZED_NAME_COUNTRY_SUBDIVISION)
  private CountrySubDivision countrySubdivision;

  public static final String SERIALIZED_NAME_LINE1 = "line1";
  @SerializedName(SERIALIZED_NAME_LINE1)
  private String line1;

  public static final String SERIALIZED_NAME_LINE2 = "line2";
  @SerializedName(SERIALIZED_NAME_LINE2)
  private String line2;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;


  public Address city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Name of the city or town where the merchant is located
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WELSHPOOL", value = "Name of the city or town where the merchant is located")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public Address country(Country country) {
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Country getCountry() {
    return country;
  }


  public void setCountry(Country country) {
    this.country = country;
  }


  public Address countrySubdivision(CountrySubDivision countrySubdivision) {
    
    this.countrySubdivision = countrySubdivision;
    return this;
  }

   /**
   * Get countrySubdivision
   * @return countrySubdivision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CountrySubDivision getCountrySubdivision() {
    return countrySubdivision;
  }


  public void setCountrySubdivision(CountrySubDivision countrySubdivision) {
    this.countrySubdivision = countrySubdivision;
  }


  public Address line1(String line1) {
    
    this.line1 = line1;
    return this;
  }

   /**
   * Line 1 of the street address of the merchant. Usually includes the street number and name
   * @return line1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UNIT 2 248 WELSHPOOL RD", value = "Line 1 of the street address of the merchant. Usually includes the street number and name")

  public String getLine1() {
    return line1;
  }


  public void setLine1(String line1) {
    this.line1 = line1;
  }


  public Address line2(String line2) {
    
    this.line2 = line2;
    return this;
  }

   /**
   * Line 2 of the street address, usually an apartment number or suite number
   * @return line2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12", value = "Line 2 of the street address, usually an apartment number or suite number")

  public String getLine2() {
    return line2;
  }


  public void setLine2(String line2) {
    this.line2 = line2;
  }


  public Address postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The zip code or postal code for a merchant
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6106", value = "The zip code or postal code for a merchant")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.city, address.city) &&
        Objects.equals(this.country, address.country) &&
        Objects.equals(this.countrySubdivision, address.countrySubdivision) &&
        Objects.equals(this.line1, address.line1) &&
        Objects.equals(this.line2, address.line2) &&
        Objects.equals(this.postalCode, address.postalCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, country, countrySubdivision, line1, line2, postalCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countrySubdivision: ").append(toIndentedString(countrySubdivision)).append("\n");
    sb.append("    line1: ").append(toIndentedString(line1)).append("\n");
    sb.append("    line2: ").append(toIndentedString(line2)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

